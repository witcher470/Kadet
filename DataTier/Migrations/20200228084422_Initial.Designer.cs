// <auto-generated />
using System;
using DataTier.Entities.Abstract;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DataTier.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20200228084422_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DataTier.Entities.Concrete.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("ActionStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CardAppeal")
                        .HasColumnType("text");

                    b.Property<int>("CardCost")
                        .HasColumnType("integer");

                    b.Property<int>("CardNumber")
                        .HasColumnType("integer");

                    b.Property<int>("CardStatus")
                        .HasColumnType("integer");

                    b.Property<string>("ClientFristName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientSecondName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientThirdName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfContractWithClient")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateOfContractWithKadet")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DeactivationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployerFirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployerSecondName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployerThirdName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ManagerFirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ManagerSecondName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ManagerThirdName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfContractWithClient")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfContractWithKadet")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SellerFirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SellerSecondName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SellerThirdName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Services")
                        .HasColumnType("integer");

                    b.Property<string>("StateNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VIN")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("DataTier.Entities.Concrete.Contractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AnotherPhoneNumber")
                        .HasColumnType("text");

                    b.Property<int>("AnotherServices")
                        .HasColumnType("integer");

                    b.Property<int>("CarryingCapacityOfTrucks")
                        .HasColumnType("integer");

                    b.Property<string>("Cities")
                        .HasColumnType("text");

                    b.Property<int>("ContractorStatus")
                        .HasColumnType("integer");

                    b.Property<int>("CraneManipulatorStatus")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<int>("NumberOfTrucks")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlatformLenght")
                        .HasColumnType("integer");

                    b.Property<string>("PriceList")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Services")
                        .HasColumnType("integer");

                    b.Property<string>("ThirdName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TrolleysStatus")
                        .HasColumnType("integer");

                    b.Property<string>("WorkTime")
                        .HasColumnType("text");

                    b.Property<string>("YearOfManufactureOfTrucks")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Contractors");
                });

            modelBuilder.Entity("DataTier.Entities.Concrete.DealerCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccountingResponsiblePersonsEmail")
                        .HasColumnType("text");

                    b.Property<string>("AccountingResponsiblePersonsName")
                        .HasColumnType("text");

                    b.Property<string>("AccountingResponsiblePersonsPhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("AnotherProducts")
                        .HasColumnType("text");

                    b.Property<string>("BillingInformation")
                        .HasColumnType("text");

                    b.Property<string>("CarBrands")
                        .HasColumnType("text");

                    b.Property<string>("CommercialResponsiblePersonsEmail")
                        .HasColumnType("text");

                    b.Property<string>("CommercialResponsiblePersonsName")
                        .HasColumnType("text");

                    b.Property<string>("CommercialResponsiblePersonsPhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("CooperatorName")
                        .HasColumnType("text");

                    b.Property<string>("CooperatorPhoneNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTimeOfContract")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DealerCenterStatus")
                        .HasColumnType("integer");

                    b.Property<int>("HasFillial")
                        .HasColumnType("integer");

                    b.Property<string>("LegalPesonBillingInformation")
                        .HasColumnType("text");

                    b.Property<string>("LegalPesonDirectorOrSignatory")
                        .HasColumnType("text");

                    b.Property<string>("LegalPesonName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("MaterialsLink")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("ReceptionPhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SettlementPeriod")
                        .HasColumnType("integer");

                    b.Property<int>("SettlementType")
                        .HasColumnType("integer");

                    b.Property<string>("TechnicalAssistanceCardSeries")
                        .HasColumnType("text");

                    b.Property<string>("TypesAndFillingOfServicePackages")
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.Property<DateTime>("WorkingHours")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("DealerCenters");
                });

            modelBuilder.Entity("DataTier.Entities.Concrete.Fillial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CarBrands")
                        .HasColumnType("text");

                    b.Property<int?>("DealerCenterId")
                        .HasColumnType("integer");

                    b.Property<int>("FillialStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DealerCenterId");

                    b.ToTable("Fillials");
                });

            modelBuilder.Entity("DataTier.Entities.Concrete.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClientFirstName")
                        .HasColumnType("integer");

                    b.Property<string>("ClientReview")
                        .HasColumnType("text");

                    b.Property<int>("ClientSecondName")
                        .HasColumnType("integer");

                    b.Property<int>("ClientThirdName")
                        .HasColumnType("integer");

                    b.Property<int>("CompanyComission")
                        .HasColumnType("integer");

                    b.Property<int>("ContractorIdId")
                        .HasColumnType("integer");

                    b.Property<string>("ContractorPhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContractorSerialNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTimeOrdered")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("OperatorComment")
                        .HasColumnType("text");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer");

                    b.Property<string>("PointOfDeparture")
                        .HasColumnType("text");

                    b.Property<string>("PointOfDestination")
                        .HasColumnType("text");

                    b.Property<int>("ServiceRating")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ServiceTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Services")
                        .HasColumnType("integer");

                    b.Property<int>("ServicesCostForClient")
                        .HasColumnType("integer");

                    b.Property<int>("ServicesCostForContractor")
                        .HasColumnType("integer");

                    b.Property<string>("TechnicalAssistanceCardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContractorIdId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DataTier.Entities.Concrete.ServiceStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int?>("DealerCenterId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ServiceStationStatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DealerCenterId");

                    b.ToTable("ServiceStations");
                });

            modelBuilder.Entity("DataTier.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AnotherLanguage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("MainLanguage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneSIPNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartWorkDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ThirdName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Timezone")
                        .HasColumnType("text");

                    b.Property<int>("UserStatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataTier.Entities.Concrete.Fillial", b =>
                {
                    b.HasOne("DataTier.Entities.Concrete.DealerCenter", "DealerCenter")
                        .WithMany("Fillials")
                        .HasForeignKey("DealerCenterId");
                });

            modelBuilder.Entity("DataTier.Entities.Concrete.Order", b =>
                {
                    b.HasOne("DataTier.Entities.Concrete.Contractor", "ContractorId")
                        .WithMany("Orders")
                        .HasForeignKey("ContractorIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataTier.Entities.Concrete.ServiceStation", b =>
                {
                    b.HasOne("DataTier.Entities.Concrete.DealerCenter", null)
                        .WithMany("ServiceStations")
                        .HasForeignKey("DealerCenterId");
                });
#pragma warning restore 612, 618
        }
    }
}
